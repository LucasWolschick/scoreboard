/*
    UF:
    inteiro: 2
    add: 2
    mul: 2
    INST:
    lw: 1
    mul: 10
    sub: 2
    div: 40
    add: 2
*/

.data
    10
    20
.text
    # r1 contém o primeiro número
    # r2 contém o segundo número
    # r3 será usado para armazenar o resultado da soma
    # r4 será usado para armazenar o resultado da multiplicação
    # r5 será usado para armazenar o resultado da subtração
    # r6 será usado para armazenar o resultado da operação AND
    # r7 será usado para armazenar o resultado da operação OR
    # r8 será usado para armazenar o resultado da operação NOT

    #Carrega os números inteiros da memória
    lw r1, 0(r0) 
    lw r2, 4(r0) 

    # Soma (depende de r1 e r2)
    add r3, r1, r2 

    # Multiplicação (depende de r1 e r2)
    mul r4, r1, r2 

    #Subtração (depende de r1 e r2)
    sub r4, r1, r7

    #Operação AND (depende de r3 e r4)
    and r6, r3, r4 

    #Operação OR (depende de r4 e r5)
    or r7, r4, r5 

    #Operação NOT (depende de r5)
    not r8, r5 

    #Resultados
    sw r3, 8(r0)
    sw r4, 12(r0) 
    sw r4, 16(r0) 
    sw r6, 20(r0) 
    sw r7, 24(r0) 
    sw r8, 28(r0) 

    #Fim
    exit
